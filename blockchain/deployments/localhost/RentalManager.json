{
  "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_propertyManagerAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tenant",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "propertyId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endDate",
          "type": "uint256"
        }
      ],
      "name": "RentalCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tenant",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "propertyId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startDate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalPrice",
          "type": "uint256"
        }
      ],
      "name": "RentalCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pricePerDay",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        }
      ],
      "name": "calculateTotalPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_totalEth",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalUsd",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rentalId",
          "type": "uint256"
        }
      ],
      "name": "completeRental",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rentalId",
          "type": "uint256"
        }
      ],
      "name": "confirmPropertyRent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rentalId",
          "type": "uint256"
        }
      ],
      "name": "getRental",
      "outputs": [
        {
          "internalType": "address",
          "name": "tenant",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "propertyId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalPrice",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "propertyManager",
      "outputs": [
        {
          "internalType": "contract PropertyManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rentalId",
          "type": "uint256"
        }
      ],
      "name": "rejectPropertyRent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_propertyId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        }
      ],
      "name": "rentProperty",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rentalCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rentals",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tenant",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "propertyId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalPrice",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isWaitingConfirmation",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x84f093dced6876a25348e55d0e451a8458fe9f2bc26e401d5e1fc3fe9ea2279f",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
    "transactionIndex": 0,
    "gasUsed": "986752",
    "logsBloom": "0x
    "blockHash": "0x2d34894a60efb5a277b1fadadcf7384fcce0c262341b74537a57eb018efb507c",
    "transactionHash": "0x84f093dced6876a25348e55d0e451a8458fe9f2bc26e401d5e1fc3fe9ea2279f",
    "logs": [],
    "blockNumber": 3,
    "cumulativeGasUsed": "986752",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "b6841a2013951586916528521105b44f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_propertyManagerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tenant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"propertyId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"}],\"name\":\"RentalCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tenant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"propertyId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalPrice\",\"type\":\"uint256\"}],\"name\":\"RentalCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pricePerDay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"calculateTotalPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalEth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalUsd\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rentalId\",\"type\":\"uint256\"}],\"name\":\"completeRental\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rentalId\",\"type\":\"uint256\"}],\"name\":\"confirmPropertyRent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rentalId\",\"type\":\"uint256\"}],\"name\":\"getRental\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tenant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"propertyId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"propertyManager\",\"outputs\":[{\"internalType\":\"contract PropertyManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rentalId\",\"type\":\"uint256\"}],\"name\":\"rejectPropertyRent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_propertyId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"rentProperty\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rentalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rentals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tenant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"propertyId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isWaitingConfirmation\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RentalManager.sol\":\"RentalManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    function getUsdAmount(uint256 ethAmount, AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = weiToEth(ethPrice * ethAmount);\\n        return ethAmountInUsd;\\n    }\\n\\n    function weiToEth(uint256 _wei) internal pure returns (uint256) {\\n        return _wei / 1000000000000000000;\\n    }\\n}\\n\",\"keccak256\":\"0x8ceb5d2dd3687017486d09dd9ac4aa1becf27af4cc741e53969e880290e4f183\",\"license\":\"MIT\"},\"contracts/PropertyManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract PropertyManager {\\n    struct Property {\\n        address owner;\\n        uint256 pricePerDay;\\n        bool isAvailable;\\n    }\\n\\n    mapping(uint256 => Property) public properties;\\n    uint256 public propertyCount;\\n\\n    modifier onlyPropertyOwner(uint256 _propertyId) {\\n        require(properties[_propertyId].owner == msg.sender, \\\"Only property owner can perform this action\\\");\\n        _;\\n    }\\n\\n    event PropertyListed(uint256 indexed id, address indexed owner, uint256 pricePerDay);\\n    event Debug(string message);\\n\\n    function listProperty(uint256 _pricePerDay) external {\\n        require(_pricePerDay > 0, \\\"Price per day must be greater than zero\\\");\\n\\n        properties[propertyCount] = Property({\\n            owner: msg.sender,\\n            pricePerDay: _pricePerDay,\\n            isAvailable: true\\n        });\\n        propertyCount++;\\n\\n        emit PropertyListed(propertyCount, msg.sender, _pricePerDay);\\n    }\\n\\n    function getProperty(uint256 _propertyId) external view returns (\\n        address owner,\\n        uint256 pricePerDay,\\n        bool isAvailable\\n    ) {\\n        Property storage property = properties[_propertyId];\\n        return (property.owner, property.pricePerDay, property.isAvailable);\\n    }\\n\\n    function updatePropertyAvailability(uint256 _propertyId, bool _availability) external onlyPropertyOwner(_propertyId) {\\n        Property storage property = properties[_propertyId];\\n        require(property.owner == msg.sender, \\\"Only property owner can update availability\\\");\\n        property.isAvailable = _availability;\\n    }\\n}\",\"keccak256\":\"0x412f3f456a799b357397d3d7e3583ff2728ac5b81fb643aebaabacabd4671b34\",\"license\":\"MIT\"},\"contracts/RentalManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\n\\nimport \\\"./PropertyManager.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\ncontract RentalManager {\\n    using PriceConverter for uint256;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    struct Rental {\\n        address owner;\\n        address tenant;\\n        uint256 propertyId;\\n        uint256 startDate;\\n        uint256 duration;\\n        uint256 totalPrice;\\n        bool isActive;\\n        bool isWaitingConfirmation;\\n    }\\n\\n    mapping(uint256 => Rental) public rentals;\\n    uint256 public rentalCount;\\n\\n    modifier onlyPropertyOwner(uint256 _rentalId) {\\n        require(rentals[_rentalId].owner == msg.sender, \\\"Only property owner can perform this action\\\");\\n        _;\\n    }\\n\\n    modifier waitingConfirmation(uint256 _rentalId) {\\n        require(rentals[_rentalId].isWaitingConfirmation, \\\"Rental is not waiting for confirmation\\\");\\n        _;\\n    }\\n\\n    PropertyManager public propertyManager;\\n\\n    event RentalCreated(uint256 indexed id, address indexed tenant, uint256 propertyId, uint256 startDate, uint256 duration, uint256 totalPrice);\\n    event RentalCompleted(uint256 indexed id, address indexed tenant, uint256 propertyId, uint256 endDate);\\n\\n    constructor(address _propertyManagerAddress, address priceFeed) {\\n        propertyManager = PropertyManager(_propertyManagerAddress);\\n        s_priceFeed = AggregatorV3Interface(priceFeed);\\n    }\\n\\n    function rentProperty(uint256 _propertyId, uint256 _duration) external payable {\\n        (address owner, uint256 pricePerDay, bool isAvailable) = propertyManager.getProperty(_propertyId);\\n        require(isAvailable, \\\"Property not available for rent\\\");\\n        require(msg.value >= pricePerDay * 10**18 * _duration, \\\"Insufficient funds sent\\\");\\n        uint256 totalPrice = pricePerDay * _duration;\\n\\n        rentals[rentalCount] = Rental(owner, msg.sender, _propertyId, block.timestamp, _duration, totalPrice, false, true);\\n        rentalCount++;\\n\\n        payable(owner).transfer(totalPrice);\\n\\n        emit RentalCreated(rentalCount, msg.sender, _propertyId, block.timestamp, _duration, totalPrice);\\n    }\\n\\n    function confirmPropertyRent(uint256 _rentalId) external onlyPropertyOwner(_rentalId) waitingConfirmation(_rentalId) {\\n        propertyManager.updatePropertyAvailability(_rentalId, false);\\n        rentals[_rentalId].isWaitingConfirmation = false;\\n    }\\n\\n    function rejectPropertyRent(uint256 _rentalId) external onlyPropertyOwner(_rentalId) waitingConfirmation(_rentalId) {\\n        rentals[_rentalId].isWaitingConfirmation = false;\\n    }\\n\\n    function completeRental(uint256 _rentalId) external onlyPropertyOwner(_rentalId) {\\n        Rental storage rental = rentals[_rentalId];\\n        require(rental.isActive, \\\"Rental already completed\\\");\\n\\n        rental.isActive = false;\\n        propertyManager.updatePropertyAvailability(rental.propertyId, true);\\n\\n        emit RentalCompleted(_rentalId, rental.tenant, rental.propertyId, block.timestamp);\\n    }\\n\\n    function getRental(uint256 _rentalId) external view returns (\\n        address tenant,\\n        uint256 propertyId,\\n        uint256 startDate,\\n        uint256 duration,\\n        uint256 totalPrice,\\n        bool isActive\\n    ) {\\n        Rental storage rental = rentals[_rentalId];\\n        return (\\n            rental.tenant,\\n            rental.propertyId,\\n            rental.startDate,\\n            rental.duration,\\n            rental.totalPrice,\\n            rental.isActive\\n        );\\n    }\\n\\n    function calculateTotalPrice(uint256 _pricePerDay, uint256 _duration) public view returns (uint256 _totalEth, uint256 _totalUsd) {\\n        uint256 totalEth = _pricePerDay * _duration;\\n        uint256 totalUsd = PriceConverter.getUsdAmount(totalEth, s_priceFeed);\\n        return (totalEth, totalUsd);\\n    }\\n}\\n\\n\\n\",\"keccak256\":\"0x528ec25fd6157efa75f3fad4d08619e131061c727b00c42ebd5e324fb1af34cf\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516110e13803806110e183398101604081905261002f9161007c565b600380546001600160a01b039384166001600160a01b031991821617909155600080549290931691161790556100af565b80516001600160a01b038116811461007757600080fd5b919050565b6000806040838503121561008f57600080fd5b61009883610060565b91506100a660208401610060565b90509250929050565b611023806100be6000396000f3fe6080604052600436106100965760003560e01c8063896f018f11610069578063af94a1d11161004e578063af94a1d114610205578063e19c7164146102da578063e7356cb5146102fa57600080fd5b8063896f018f146101c557806394c5056c146101e557600080fd5b80630a294ab61461009b57806312a076b9146100c45780633ec4ebb7146100f9578063652bd29e1461010e575b600080fd5b3480156100a757600080fd5b506100b160025481565b6040519081526020015b60405180910390f35b3480156100d057600080fd5b506100e46100df366004610ddd565b61034c565b604080519283526020830191909152016100bb565b61010c610107366004610ddd565b610390565b005b34801561011a57600080fd5b5061017f610129366004610dff565b600090815260016020819052604090912090810154600282015460038301546004840154600585015460069095015473ffffffffffffffffffffffffffffffffffffffff9094169592949193909260ff90911690565b6040805173ffffffffffffffffffffffffffffffffffffffff909716875260208701959095529385019290925260608401526080830152151560a082015260c0016100bb565b3480156101d157600080fd5b5061010c6101e0366004610dff565b610703565b3480156101f157600080fd5b5061010c610200366004610dff565b610951565b34801561021157600080fd5b50610283610220366004610dff565b6001602081905260009182526040909120805491810154600282015460038301546004840154600585015460069095015473ffffffffffffffffffffffffffffffffffffffff968716969094169492939192909160ff8082169161010090041688565b6040805173ffffffffffffffffffffffffffffffffffffffff998a168152989097166020890152958701949094526060860192909252608085015260a0840152151560c0830152151560e0820152610100016100bb565b3480156102e657600080fd5b5061010c6102f5366004610dff565b610ae9565b34801561030657600080fd5b506003546103279073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100bb565b6000808061035a8486610e47565b600080549192509061038390839073ffffffffffffffffffffffffffffffffffffffff16610d0c565b9196919550909350505050565b6003546040517f32665ffb000000000000000000000000000000000000000000000000000000008152600481018490526000918291829173ffffffffffffffffffffffffffffffffffffffff16906332665ffb90602401606060405180830381865afa158015610404573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104289190610e5e565b9250925092508061049a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f50726f7065727479206e6f7420617661696c61626c6520666f722072656e740060448201526064015b60405180910390fd5b836104ad83670de0b6b3a7640000610e47565b6104b79190610e47565b341015610520576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f496e73756666696369656e742066756e64732073656e740000000000000000006044820152606401610491565b600061052c8584610e47565b60408051610100808201835273ffffffffffffffffffffffffffffffffffffffff80891683523360208085019182528486018d81524260608701908152608087018e815260a088018a8152600060c08a01818152600160e08c01818152600280548552988290529c83209b518c54908b167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216178d559851908c01805491909a1698169790971790975592518885015590516003880155516004870155516005860155905160069094018054955115159093027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff941515949094167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000090951694909417929092179055815492935061066583610ebf565b909155505060405173ffffffffffffffffffffffffffffffffffffffff85169082156108fc029083906000818181858888f193505050501580156106ad573d6000803e3d6000fd5b5060025460408051888152426020820152908101879052606081018390523391907f19cb7d28743aeb4c1519ae4a82536965ee0c90338e075136607788a711f7444d9060800160405180910390a3505050505050565b600081815260016020526040902054819073ffffffffffffffffffffffffffffffffffffffff1633146107b8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f4f6e6c792070726f7065727479206f776e65722063616e20706572666f726d2060448201527f7468697320616374696f6e0000000000000000000000000000000000000000006064820152608401610491565b6000828152600160205260409020600681015460ff16610834576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f52656e74616c20616c726561647920636f6d706c6574656400000000000000006044820152606401610491565b6006810180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905560035460028201546040517f945e130700000000000000000000000000000000000000000000000000000000815260048101919091526001602482015273ffffffffffffffffffffffffffffffffffffffff9091169063945e130790604401600060405180830381600087803b1580156108d757600080fd5b505af11580156108eb573d6000803e3d6000fd5b50505050600181015460028201546040805191825242602083015273ffffffffffffffffffffffffffffffffffffffff9092169185917f9da9a5fb914be08275ae99b10a15461e0981ad824738565b9ac65f0d86bf40b7910160405180910390a3505050565b600081815260016020526040902054819073ffffffffffffffffffffffffffffffffffffffff163314610a06576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f4f6e6c792070726f7065727479206f776e65722063616e20706572666f726d2060448201527f7468697320616374696f6e0000000000000000000000000000000000000000006064820152608401610491565b6000828152600160205260409020600601548290610100900460ff16610aae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f52656e74616c206973206e6f742077616974696e6720666f7220636f6e66697260448201527f6d6174696f6e00000000000000000000000000000000000000000000000000006064820152608401610491565b5050600090815260016020526040902060060180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055565b600081815260016020526040902054819073ffffffffffffffffffffffffffffffffffffffff163314610b9e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f4f6e6c792070726f7065727479206f776e65722063616e20706572666f726d2060448201527f7468697320616374696f6e0000000000000000000000000000000000000000006064820152608401610491565b6000828152600160205260409020600601548290610100900460ff16610c46576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f52656e74616c206973206e6f742077616974696e6720666f7220636f6e66697260448201527f6d6174696f6e00000000000000000000000000000000000000000000000000006064820152608401610491565b6003546040517f945e1307000000000000000000000000000000000000000000000000000000008152600481018590526000602482015273ffffffffffffffffffffffffffffffffffffffff9091169063945e130790604401600060405180830381600087803b158015610cb957600080fd5b505af1158015610ccd573d6000803e3d6000fd5b505050600093845250506001602052506040902060060180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055565b600080610d1883610d39565b90506000610d2e610d298684610e47565b610dc9565b925050505b92915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610d87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dab9190610f16565b505050915050806402540be400610dc29190610f66565b9392505050565b6000610d33670de0b6b3a764000083610fb2565b60008060408385031215610df057600080fd5b50508035926020909101359150565b600060208284031215610e1157600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082028115828204841417610d3357610d33610e18565b600080600060608486031215610e7357600080fd5b835173ffffffffffffffffffffffffffffffffffffffff81168114610e9757600080fd5b6020850151604086015191945092508015158114610eb457600080fd5b809150509250925092565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610ef057610ef0610e18565b5060010190565b805169ffffffffffffffffffff81168114610f1157600080fd5b919050565b600080600080600060a08688031215610f2e57600080fd5b610f3786610ef7565b9450602086015193506040860151925060608601519150610f5a60808701610ef7565b90509295509295909350565b808202600082127f800000000000000000000000000000000000000000000000000000000000000084141615610f9e57610f9e610e18565b8181058314821517610d3357610d33610e18565b600082610fe8577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056fea264697066735822122013709f80a3ea97023ac61fcbb7191ccd08110a12ea5d2c00b409c906000cd5a264736f6c63430008180033",
  "deployedBytecode": "0x6080604052600436106100965760003560e01c8063896f018f11610069578063af94a1d11161004e578063af94a1d114610205578063e19c7164146102da578063e7356cb5146102fa57600080fd5b8063896f018f146101c557806394c5056c146101e557600080fd5b80630a294ab61461009b57806312a076b9146100c45780633ec4ebb7146100f9578063652bd29e1461010e575b600080fd5b3480156100a757600080fd5b506100b160025481565b6040519081526020015b60405180910390f35b3480156100d057600080fd5b506100e46100df366004610ddd565b61034c565b604080519283526020830191909152016100bb565b61010c610107366004610ddd565b610390565b005b34801561011a57600080fd5b5061017f610129366004610dff565b600090815260016020819052604090912090810154600282015460038301546004840154600585015460069095015473ffffffffffffffffffffffffffffffffffffffff9094169592949193909260ff90911690565b6040805173ffffffffffffffffffffffffffffffffffffffff909716875260208701959095529385019290925260608401526080830152151560a082015260c0016100bb565b3480156101d157600080fd5b5061010c6101e0366004610dff565b610703565b3480156101f157600080fd5b5061010c610200366004610dff565b610951565b34801561021157600080fd5b50610283610220366004610dff565b6001602081905260009182526040909120805491810154600282015460038301546004840154600585015460069095015473ffffffffffffffffffffffffffffffffffffffff968716969094169492939192909160ff8082169161010090041688565b6040805173ffffffffffffffffffffffffffffffffffffffff998a168152989097166020890152958701949094526060860192909252608085015260a0840152151560c0830152151560e0820152610100016100bb565b3480156102e657600080fd5b5061010c6102f5366004610dff565b610ae9565b34801561030657600080fd5b506003546103279073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100bb565b6000808061035a8486610e47565b600080549192509061038390839073ffffffffffffffffffffffffffffffffffffffff16610d0c565b9196919550909350505050565b6003546040517f32665ffb000000000000000000000000000000000000000000000000000000008152600481018490526000918291829173ffffffffffffffffffffffffffffffffffffffff16906332665ffb90602401606060405180830381865afa158015610404573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104289190610e5e565b9250925092508061049a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f50726f7065727479206e6f7420617661696c61626c6520666f722072656e740060448201526064015b60405180910390fd5b836104ad83670de0b6b3a7640000610e47565b6104b79190610e47565b341015610520576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f496e73756666696369656e742066756e64732073656e740000000000000000006044820152606401610491565b600061052c8584610e47565b60408051610100808201835273ffffffffffffffffffffffffffffffffffffffff80891683523360208085019182528486018d81524260608701908152608087018e815260a088018a8152600060c08a01818152600160e08c01818152600280548552988290529c83209b518c54908b167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216178d559851908c01805491909a1698169790971790975592518885015590516003880155516004870155516005860155905160069094018054955115159093027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff941515949094167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000090951694909417929092179055815492935061066583610ebf565b909155505060405173ffffffffffffffffffffffffffffffffffffffff85169082156108fc029083906000818181858888f193505050501580156106ad573d6000803e3d6000fd5b5060025460408051888152426020820152908101879052606081018390523391907f19cb7d28743aeb4c1519ae4a82536965ee0c90338e075136607788a711f7444d9060800160405180910390a3505050505050565b600081815260016020526040902054819073ffffffffffffffffffffffffffffffffffffffff1633146107b8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f4f6e6c792070726f7065727479206f776e65722063616e20706572666f726d2060448201527f7468697320616374696f6e0000000000000000000000000000000000000000006064820152608401610491565b6000828152600160205260409020600681015460ff16610834576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f52656e74616c20616c726561647920636f6d706c6574656400000000000000006044820152606401610491565b6006810180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905560035460028201546040517f945e130700000000000000000000000000000000000000000000000000000000815260048101919091526001602482015273ffffffffffffffffffffffffffffffffffffffff9091169063945e130790604401600060405180830381600087803b1580156108d757600080fd5b505af11580156108eb573d6000803e3d6000fd5b50505050600181015460028201546040805191825242602083015273ffffffffffffffffffffffffffffffffffffffff9092169185917f9da9a5fb914be08275ae99b10a15461e0981ad824738565b9ac65f0d86bf40b7910160405180910390a3505050565b600081815260016020526040902054819073ffffffffffffffffffffffffffffffffffffffff163314610a06576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f4f6e6c792070726f7065727479206f776e65722063616e20706572666f726d2060448201527f7468697320616374696f6e0000000000000000000000000000000000000000006064820152608401610491565b6000828152600160205260409020600601548290610100900460ff16610aae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f52656e74616c206973206e6f742077616974696e6720666f7220636f6e66697260448201527f6d6174696f6e00000000000000000000000000000000000000000000000000006064820152608401610491565b5050600090815260016020526040902060060180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055565b600081815260016020526040902054819073ffffffffffffffffffffffffffffffffffffffff163314610b9e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f4f6e6c792070726f7065727479206f776e65722063616e20706572666f726d2060448201527f7468697320616374696f6e0000000000000000000000000000000000000000006064820152608401610491565b6000828152600160205260409020600601548290610100900460ff16610c46576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f52656e74616c206973206e6f742077616974696e6720666f7220636f6e66697260448201527f6d6174696f6e00000000000000000000000000000000000000000000000000006064820152608401610491565b6003546040517f945e1307000000000000000000000000000000000000000000000000000000008152600481018590526000602482015273ffffffffffffffffffffffffffffffffffffffff9091169063945e130790604401600060405180830381600087803b158015610cb957600080fd5b505af1158015610ccd573d6000803e3d6000fd5b505050600093845250506001602052506040902060060180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055565b600080610d1883610d39565b90506000610d2e610d298684610e47565b610dc9565b925050505b92915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610d87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dab9190610f16565b505050915050806402540be400610dc29190610f66565b9392505050565b6000610d33670de0b6b3a764000083610fb2565b60008060408385031215610df057600080fd5b50508035926020909101359150565b600060208284031215610e1157600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082028115828204841417610d3357610d33610e18565b600080600060608486031215610e7357600080fd5b835173ffffffffffffffffffffffffffffffffffffffff81168114610e9757600080fd5b6020850151604086015191945092508015158114610eb457600080fd5b809150509250925092565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610ef057610ef0610e18565b5060010190565b805169ffffffffffffffffffff81168114610f1157600080fd5b919050565b600080600080600060a08688031215610f2e57600080fd5b610f3786610ef7565b9450602086015193506040860151925060608601519150610f5a60808701610ef7565b90509295509295909350565b808202600082127f800000000000000000000000000000000000000000000000000000000000000084141615610f9e57610f9e610e18565b8181058314821517610d3357610d33610e18565b600082610fe8577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056fea264697066735822122013709f80a3ea97023ac61fcbb7191ccd08110a12ea5d2c00b409c906000cd5a264736f6c63430008180033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 261,
        "contract": "contracts/RentalManager.sol:RentalManager",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 283,
        "contract": "contracts/RentalManager.sol:RentalManager",
        "label": "rentals",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(Rental)278_storage)"
      },
      {
        "astId": 285,
        "contract": "contracts/RentalManager.sol:RentalManager",
        "label": "rentalCount",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 319,
        "contract": "contracts/RentalManager.sol:RentalManager",
        "label": "propertyManager",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(PropertyManager)250"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_contract(PropertyManager)250": {
        "encoding": "inplace",
        "label": "contract PropertyManager",
        "numberOfBytes": "20"
      },
      "t_mapping(t_uint256,t_struct(Rental)278_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct RentalManager.Rental)",
        "numberOfBytes": "32",
        "value": "t_struct(Rental)278_storage"
      },
      "t_struct(Rental)278_storage": {
        "encoding": "inplace",
        "label": "struct RentalManager.Rental",
        "members": [
          {
            "astId": 263,
            "contract": "contracts/RentalManager.sol:RentalManager",
            "label": "owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 265,
            "contract": "contracts/RentalManager.sol:RentalManager",
            "label": "tenant",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 267,
            "contract": "contracts/RentalManager.sol:RentalManager",
            "label": "propertyId",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 269,
            "contract": "contracts/RentalManager.sol:RentalManager",
            "label": "startDate",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 271,
            "contract": "contracts/RentalManager.sol:RentalManager",
            "label": "duration",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 273,
            "contract": "contracts/RentalManager.sol:RentalManager",
            "label": "totalPrice",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 275,
            "contract": "contracts/RentalManager.sol:RentalManager",
            "label": "isActive",
            "offset": 0,
            "slot": "6",
            "type": "t_bool"
          },
          {
            "astId": 277,
            "contract": "contracts/RentalManager.sol:RentalManager",
            "label": "isWaitingConfirmation",
            "offset": 1,
            "slot": "6",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}