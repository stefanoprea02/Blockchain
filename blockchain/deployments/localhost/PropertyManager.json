{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "Debug",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pricePerDay",
          "type": "uint256"
        }
      ],
      "name": "PropertyListed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_propertyId",
          "type": "uint256"
        }
      ],
      "name": "getProperty",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pricePerDay",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isAvailable",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pricePerDay",
          "type": "uint256"
        }
      ],
      "name": "listProperty",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "properties",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pricePerDay",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isAvailable",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "propertyCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_propertyId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_availability",
          "type": "bool"
        }
      ],
      "name": "updatePropertyAvailability",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x596c8e8403132579c19c3e41b95ea80bca34c95f79d6447be3851a84103fd0df",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "355644",
    "logsBloom": "0x
    "blockHash": "0x16c39799cf91c494cac1324ff17b60f2a275047685287b814b077f5d8e8b5bdc",
    "transactionHash": "0x596c8e8403132579c19c3e41b95ea80bca34c95f79d6447be3851a84103fd0df",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "355644",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "0ca47e01176a2313d952c5bdabbb8d6a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"Debug\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pricePerDay\",\"type\":\"uint256\"}],\"name\":\"PropertyListed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_propertyId\",\"type\":\"uint256\"}],\"name\":\"getProperty\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerDay\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isAvailable\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pricePerDay\",\"type\":\"uint256\"}],\"name\":\"listProperty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"properties\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerDay\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isAvailable\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"propertyCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_propertyId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_availability\",\"type\":\"bool\"}],\"name\":\"updatePropertyAvailability\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PropertyManager.sol\":\"PropertyManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/PropertyManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract PropertyManager {\\n    struct Property {\\n        address owner;\\n        uint256 pricePerDay;\\n        bool isAvailable;\\n    }\\n\\n    mapping(uint256 => Property) public properties;\\n    uint256 public propertyCount;\\n\\n    modifier onlyPropertyOwner(uint256 _propertyId) {\\n        require(properties[_propertyId].owner == msg.sender, \\\"Only property owner can perform this action\\\");\\n        _;\\n    }\\n\\n    event PropertyListed(uint256 indexed id, address indexed owner, uint256 pricePerDay);\\n    event Debug(string message);\\n\\n    function listProperty(uint256 _pricePerDay) external {\\n        require(_pricePerDay > 0, \\\"Price per day must be greater than zero\\\");\\n\\n        properties[propertyCount] = Property({\\n            owner: msg.sender,\\n            pricePerDay: _pricePerDay,\\n            isAvailable: true\\n        });\\n        propertyCount++;\\n\\n        emit PropertyListed(propertyCount, msg.sender, _pricePerDay);\\n    }\\n\\n    function getProperty(uint256 _propertyId) external view returns (\\n        address owner,\\n        uint256 pricePerDay,\\n        bool isAvailable\\n    ) {\\n        Property storage property = properties[_propertyId];\\n        return (property.owner, property.pricePerDay, property.isAvailable);\\n    }\\n\\n    function updatePropertyAvailability(uint256 _propertyId, bool _availability) external onlyPropertyOwner(_propertyId) {\\n        Property storage property = properties[_propertyId];\\n        require(property.owner == msg.sender, \\\"Only property owner can update availability\\\");\\n        property.isAvailable = _availability;\\n    }\\n}\",\"keccak256\":\"0x412f3f456a799b357397d3d7e3583ff2728ac5b81fb643aebaabacabd4671b34\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610582806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063b6aee1cf11610050578063b6aee1cf14610104578063c361a33514610117578063f7b108081461012e57600080fd5b806332665ffb1461006c578063945e1307146100ef575b600080fd5b6100b661007a36600461049f565b60009081526020819052604090208054600182015460029092015473ffffffffffffffffffffffffffffffffffffffff9091169260ff90911690565b6040805173ffffffffffffffffffffffffffffffffffffffff909416845260208401929092521515908201526060015b60405180910390f35b6101026100fd3660046104b8565b610177565b005b61010261011236600461049f565b61031a565b61012060015481565b6040519081526020016100e6565b6100b661013c36600461049f565b60006020819052908152604090208054600182015460029092015473ffffffffffffffffffffffffffffffffffffffff909116919060ff1683565b600082815260208190526040902054829073ffffffffffffffffffffffffffffffffffffffff163314610231576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f4f6e6c792070726f7065727479206f776e65722063616e20706572666f726d2060448201527f7468697320616374696f6e00000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6000838152602081905260409020805473ffffffffffffffffffffffffffffffffffffffff1633146102e5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f4f6e6c792070726f7065727479206f776e65722063616e20757064617465206160448201527f7661696c6162696c6974790000000000000000000000000000000000000000006064820152608401610228565b60020180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016921515929092179091555050565b600081116103aa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f50726963652070657220646179206d757374206265206772656174657220746860448201527f616e207a65726f000000000000000000000000000000000000000000000000006064820152608401610228565b60408051606081018252338152602080820184815260018385018181528154600090815293849052948320935184547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9091161784559051838201559251600290920180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016921515929092179091558154919061045e836104ed565b90915550506001546040518281523391907f23fb658c1698b92f5fe511a079c17ecf7965cbc3f1b873328c67e2c3c0820f1f9060200160405180910390a350565b6000602082840312156104b157600080fd5b5035919050565b600080604083850312156104cb57600080fd5b82359150602083013580151581146104e257600080fd5b809150509250929050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610545577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220aa7102953bdcd5834c7a425947c9759819bffc9195fbcc8c0baba2444511f81a64736f6c63430008180033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100675760003560e01c8063b6aee1cf11610050578063b6aee1cf14610104578063c361a33514610117578063f7b108081461012e57600080fd5b806332665ffb1461006c578063945e1307146100ef575b600080fd5b6100b661007a36600461049f565b60009081526020819052604090208054600182015460029092015473ffffffffffffffffffffffffffffffffffffffff9091169260ff90911690565b6040805173ffffffffffffffffffffffffffffffffffffffff909416845260208401929092521515908201526060015b60405180910390f35b6101026100fd3660046104b8565b610177565b005b61010261011236600461049f565b61031a565b61012060015481565b6040519081526020016100e6565b6100b661013c36600461049f565b60006020819052908152604090208054600182015460029092015473ffffffffffffffffffffffffffffffffffffffff909116919060ff1683565b600082815260208190526040902054829073ffffffffffffffffffffffffffffffffffffffff163314610231576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f4f6e6c792070726f7065727479206f776e65722063616e20706572666f726d2060448201527f7468697320616374696f6e00000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6000838152602081905260409020805473ffffffffffffffffffffffffffffffffffffffff1633146102e5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f4f6e6c792070726f7065727479206f776e65722063616e20757064617465206160448201527f7661696c6162696c6974790000000000000000000000000000000000000000006064820152608401610228565b60020180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016921515929092179091555050565b600081116103aa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f50726963652070657220646179206d757374206265206772656174657220746860448201527f616e207a65726f000000000000000000000000000000000000000000000000006064820152608401610228565b60408051606081018252338152602080820184815260018385018181528154600090815293849052948320935184547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9091161784559051838201559251600290920180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016921515929092179091558154919061045e836104ed565b90915550506001546040518281523391907f23fb658c1698b92f5fe511a079c17ecf7965cbc3f1b873328c67e2c3c0820f1f9060200160405180910390a350565b6000602082840312156104b157600080fd5b5035919050565b600080604083850312156104cb57600080fd5b82359150602083013580151581146104e257600080fd5b809150509250929050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610545577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220aa7102953bdcd5834c7a425947c9759819bffc9195fbcc8c0baba2444511f81a64736f6c63430008180033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 124,
        "contract": "contracts/PropertyManager.sol:PropertyManager",
        "label": "properties",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_uint256,t_struct(Property)119_storage)"
      },
      {
        "astId": 126,
        "contract": "contracts/PropertyManager.sol:PropertyManager",
        "label": "propertyCount",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_uint256,t_struct(Property)119_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct PropertyManager.Property)",
        "numberOfBytes": "32",
        "value": "t_struct(Property)119_storage"
      },
      "t_struct(Property)119_storage": {
        "encoding": "inplace",
        "label": "struct PropertyManager.Property",
        "members": [
          {
            "astId": 114,
            "contract": "contracts/PropertyManager.sol:PropertyManager",
            "label": "owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 116,
            "contract": "contracts/PropertyManager.sol:PropertyManager",
            "label": "pricePerDay",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 118,
            "contract": "contracts/PropertyManager.sol:PropertyManager",
            "label": "isAvailable",
            "offset": 0,
            "slot": "2",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}